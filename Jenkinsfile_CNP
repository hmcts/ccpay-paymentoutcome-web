#!groovy

	@Library("Infrastructure")

	def type = "nodejs"
	def product = "ccpay"
	def component = "paymentoutcome-web"
	def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

	// Configure branches to sync with master branch
	def branchesToSync = ['demo', 'ithc', 'perftest']

	def secrets = [
		'ccpay-${env}': [
			secret('paymentoutcome-s2s-web', 'PAYMENTOUTCOME_S2S_OTP_SECRET')
		]
	]
	def vaultOverrides = [
		'preview': 'aat',
		'hmctsdemo': 'aat'
	]

	static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
		[ $class: 'AzureKeyVaultSecret',
			secretType: 'Secret',
			name: secretName,
			version: '',
			envVariable: envVar
		]
	}

	withPipeline(type, product, component) {
	overrideVaultEnvironments(vaultOverrides)
	loadVaultSecrets(secrets)
	enableAksStagingDeployment()
	disableLegacyDeployment()
	afterAlways('checkout') {
		sh "yarn cache clean"
    sh "yarn --version"
		echo 'ccpay-paymentoutcome-web checked out'
	}
    afterAlways('build') {
      yarnBuilder.yarn('build')
    }
	//Sync demo,ithc and perftest with master branch
	syncBranchesWithMaster(branchesToSync)
	}
